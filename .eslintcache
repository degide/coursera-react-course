[{"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\MenuComponent.js":"1","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\index.js":"2","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\App.js":"3","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\DishDetailComponent.js":"4","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\reportWebVitals.js":"5","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\MainComponent.js":"6","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\FooterComponent.js":"7","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\HeaderComponent.js":"8","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\HomeComponent.js":"9","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\shared\\dishes.js":"10","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\ContactComponent.js":"11","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\AboutComponent.js":"12","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\shared\\comments.js":"13","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\redux\\leaders.js":"14","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\redux\\comments.js":"15"},{"size":1276,"mtime":1609245736204,"results":"16","hashOfConfig":"17"},{"size":640,"mtime":1609248897779,"results":"18","hashOfConfig":"17"},{"size":343,"mtime":1609248944618,"results":"19","hashOfConfig":"17"},{"size":6076,"mtime":1610475540081,"results":"20","hashOfConfig":"17"},{"size":362,"mtime":1606324425169,"results":"21","hashOfConfig":"17"},{"size":2986,"mtime":1610471705763,"results":"22","hashOfConfig":"17"},{"size":2623,"mtime":1609246802858,"results":"23","hashOfConfig":"17"},{"size":5103,"mtime":1609833523087,"results":"24","hashOfConfig":"17"},{"size":1123,"mtime":1609245255631,"results":"25","hashOfConfig":"17"},{"size":2909,"mtime":1609245223472,"results":"26","hashOfConfig":"17"},{"size":6788,"mtime":1609835378805,"results":"27","hashOfConfig":"17"},{"size":4304,"mtime":1609248730899,"results":"28","hashOfConfig":"17"},{"size":4279,"mtime":1609244763544,"results":"29","hashOfConfig":"17"},{"size":178,"mtime":1610470837772,"results":"30","hashOfConfig":"17"},{"size":505,"mtime":1610471388623,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tfa09o",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\MenuComponent.js",[],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\index.js",[],["66","67"],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\App.js",[],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\DishDetailComponent.js",["68","69","70"],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\reportWebVitals.js",[],["71","72"],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\MainComponent.js",[],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\FooterComponent.js",[],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\HeaderComponent.js",[],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\HomeComponent.js",[],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\shared\\dishes.js",[],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\ContactComponent.js",["73","74","75","76","77"],"import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Control, LocalForm,Errors } from 'react-redux-form';\r\n\r\nexport default class Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: ''\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));\r\n    }\r\n    render() {\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n        const isNumber = (val) => !isNaN(Number(val));\r\n        const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n        return (\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <h3>Send us your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Tel. Number\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 numbers',\r\n                                        maxLength: 'Must be 15 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Invalid Email Address'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\components\\AboutComponent.js",[],["78","79"],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\shared\\comments.js",[],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\redux\\leaders.js",[],"C:\\Users\\egide\\Documents\\COURSES\\coursera-react-course\\src\\redux\\comments.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":54,"column":19,"nodeType":"86","endLine":55,"endColumn":70},{"ruleId":"84","severity":1,"message":"87","line":67,"column":19,"nodeType":"86","endLine":71,"endColumn":26},{"ruleId":"84","severity":1,"message":"88","line":87,"column":19,"nodeType":"86","endLine":91,"endColumn":26},{"ruleId":"80","replacedBy":"89"},{"ruleId":"82","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":5,"column":5,"nodeType":"93","messageId":"94","endLine":5,"endColumn":11},{"ruleId":"84","severity":1,"message":"87","line":48,"column":33,"nodeType":"86","endLine":54,"endColumn":35},{"ruleId":"84","severity":1,"message":"87","line":70,"column":33,"nodeType":"86","endLine":76,"endColumn":35},{"ruleId":"84","severity":1,"message":"87","line":92,"column":33,"nodeType":"86","endLine":98,"endColumn":35},{"ruleId":"84","severity":1,"message":"87","line":115,"column":33,"nodeType":"86","endLine":121,"endColumn":35},{"ruleId":"80","replacedBy":"95"},{"ruleId":"82","replacedBy":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["97"],["98"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["97"],["98"],"no-global-assign","no-unsafe-negation"]